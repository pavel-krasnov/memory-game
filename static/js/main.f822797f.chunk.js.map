{"version":3,"sources":["Card.js","utils.js","App.js","index.js"],"names":["Card","this","props","id","color","open","onClick","key","className","style","backgroundColor","React","Component","pickRandomColor","randomColor","Math","floor","random","pickCardPairsWithRandomColor","itemsCount","colors","i","push","result","concat","length","j","map","item","index","App","onCardClick","event","state","cards","openCard","Number","target","split","newOpenCard","newCards","setState","canClick","console","log","setTimeout","onNewGameBtnClick","preventDefault","cardElements","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f822797f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DEFAULT_COLOR = 'grey';\r\n\r\nexport default class Card extends React.Component {\r\n    render() {\r\n        const { id, color, open, onClick } = this.props;\r\n        return (\r\n            <div\r\n                key={id}\r\n                className=\"card\"\r\n                id={'card-' + id}\r\n                style={{backgroundColor: open ? color : DEFAULT_COLOR}}\r\n                onClick={open ? null : onClick}\r\n            ></div>\r\n        );\r\n    }\r\n};","const pickRandomColor = () => {\r\n    const randomColor = () => Math.floor(Math.random() * 256);\r\n    return `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`;\r\n};\r\n\r\nexport const pickCardPairsWithRandomColor = (itemsCount) => {\r\n    const colors = [];\r\n    for (let i = 0; i < itemsCount / 2; i++) {\r\n        colors.push({\r\n            id: i,\r\n            color: pickRandomColor(),\r\n            open: false\r\n        });\r\n    }\r\n    const result = colors.concat(colors);\r\n    for (let i = 0; i < result.length; i++) {\r\n        const j = Math.floor(Math.random() * result.length);\r\n        [result[i], result[j]] = [result[j], result[i]];\r\n    }\r\n    return result.map((item, index) => ({...item, id: index}));\r\n}","import React from 'react';\r\nimport Card from './Card';\r\nimport { pickCardPairsWithRandomColor } from './utils';\r\nimport './App.css';\r\n\r\nconst CARDS_NUMBER = 16;\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cards: pickCardPairsWithRandomColor(CARDS_NUMBER),\r\n            openCard: null,\r\n            canClick: true\r\n        };\r\n    }\r\n\r\n    onCardClick = (event) => {\r\n        const {cards, openCard} = this.state;\r\n        const id = Number(event.target.id.split('-')[1]);\r\n        const newOpenCard = {...cards[id], open: true};\r\n        let newCards = cards.map((item, index) => index === id ? newOpenCard : item);\r\n        this.setState({...this.state, cards: newCards, canClick: false}, () => {\r\n            if (openCard) { \r\n                if (openCard.color === newOpenCard.color) {\r\n                    console.log('Color match!');\r\n                    this.setState({...this.state, openCard: null, canClick: true});\r\n                } else {\r\n                    setTimeout(() => {\r\n                        console.log('No match!');\r\n                        newCards = cards.map((item, index) => index === id || index === openCard.id ? {...item, open: false} : item);\r\n                        this.setState({...this.state, cards: newCards, openCard: null, canClick: true});\r\n                    }, 1000);\r\n                }\r\n            } else {\r\n                console.log('New open card!');\r\n                this.setState({...this.state, openCard: newOpenCard, canClick: true});\r\n            }\r\n        });\r\n    };\r\n\r\n    onNewGameBtnClick = (event) => {\r\n        event.preventDefault();\r\n        this.setState({cards: pickCardPairsWithRandomColor(CARDS_NUMBER), openCard: null});\r\n    };\r\n\r\n    render() {\r\n        const cardElements = this.state.cards.map((item, index) =>\r\n            <Card\r\n                key={index}\r\n                id={item.id}\r\n                color={item.color}\r\n                open={item.open}\r\n                onClick={this.state.canClick ? this.onCardClick : null} \r\n            />);\r\n        return (\r\n            <div id=\"app-container\">\r\n                <button id=\"new-game-btn\" onClick={this.onNewGameBtnClick}>New game</button>\r\n                <div id=\"cards-container\">\r\n                    {cardElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}